{"version":3,"file":"ShallowWrapper.js","names":["_arrayPrototype","_interopRequireDefault","require","_hasown","_enzymeShallowEqual","_stringPrototype","_Utils","_getAdapter","_Debug","_RSTTraversal","_selectors","e","__esModule","_callSuper","t","o","_getPrototypeOf","_possibleConstructorReturn","_isNativeReflectConstruct","Reflect","construct","constructor","apply","_typeof","TypeError","_assertThisInitialized","ReferenceError","_superPropGet","r","p","_get","prototype","get","bind","_superPropBase","n","Object","getOwnPropertyDescriptor","call","arguments","length","value","hasOwnProperty","setPrototypeOf","getPrototypeOf","__proto__","_inherits","create","writable","configurable","defineProperty","_setPrototypeOf","_construct","push","Boolean","valueOf","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","a","_arrayLikeToArray","toString","slice","name","Array","from","test","Symbol","iterator","isArray","_classCallCheck","_defineProperties","enumerable","_toPropertyKey","key","_createClass","ownKeys","keys","getOwnPropertySymbols","filter","_objectSpread","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","i","_toPrimitive","toPrimitive","String","Number","NODE","sym","NODES","RENDERER","UNRENDERED","ROOT","OPTIONS","SET_STATE","ROOT_NODES","CHILD_CONTEXT","WRAPPING_COMPONENT","PRIMARY_WRAPPER","ROOT_FINDER","PROVIDER_VALUES","findWhereUnwrapped","wrapper","predicate","undefined","treeFilter","flatMap","getNodeInternal","filterWhereUnwrapped","wrap","getNodesInternal","validateOptions","options","lifecycleExperimental","disableLifecycleMethods","enableComponentDidUpdateOnSetState","supportPrevContextArgumentOfComponentDidUpdate","_options$lifecycles","lifecycles","Error","componentDidUpdate","onSetState","prevContext","getAdapterLifecycles","_ref","_options$lifecycles2","hasLegacySetStateArg","hasLegacyPrevContextArg","originalGDSFP","getDerivedStateFromProps","hasShouldComponentUpdateBug","setState","getChildContext","calledByRenderer","getRootNode","node","nodeType","rendered","getRootNodeInternal","nodeParents","parentsOfNode","privateSetNodes","nodes","privateSet","pureComponentShouldComponentUpdate","prevProps","props","prevState","state","shallowEqual","isPureComponent","instance","isPureReactComponent","hierarchy","renderer","Component","type","componentName","displayNameOfNode","childContextTypes","console","warn","concat","childContext","checkPropTypes","spyOnGetChildContextInitialRender","adapter","isCustomComponentElement","spyMethod","privateSetChildContext","renderedNode","getChildContextSpy","legacyContextMode","getLastReturnValue","restore","nodeHierarchy","mockSCUIfgDSFPReturnNonNull","_spyMethod","originalSCU","shouldComponentUpdate","_len","args","_key","sCUResult","nextState","deepRender","target","element","nodeToElement","dive","children","found","at","getContextFromWrappingComponent","rootFinder","legacyContext","context","providerValues","makeShallowOptions","root","passedOptions","makeOptions","getAdapter","isCustomComponent","wrappingComponent","wrapWithWrappingComponent","_adapter$wrapWithWrap","wrappedNode","RootFinder","WrappingComponentWrapper","_getContextFromWrappi","wrappingComponentLegacyContext","wrappingComponentProviderValues","makeInheritedChildOptions","childOptions","ShallowWrapper","_this","isValidElement","createRenderer","mode","Map","render","getNode","updater","callback","componentDidMount","batchedUpdates","update","getElement","_this2","single","getElements","_this3","map","getNodes","getWrappingComponent","unmount","rerender","_this4","withSetStateAllowed","nextContext","shouldRender","shouldComponentUpdateSpy","gDSFP","cloneElement","getSnapshotBeforeUpdate","snapshot","freeze","setProps","_this5","statePayload","maybeHasUpdate","skipsComponentDidUpdateOnNullish","invokeSetStateCallback","setContext","contains","nodeOrNodes","isReactElementAlike","other","containsChildrenSubArray","nodeEqual","elementToNode","containsMatchingElement","rstNode","nodeMatches","b","containsAllMatchingElements","_this6","every","containsAnyMatchingElements","_this7","some","equals","_this8","matchesElement","_this9","find","selector","reduceTreesBySelector","is","buildPredicate","isEmptyRender","isEmptyValue","filterWhere","_this0","not","text","getTextFromNode","html","_this1","loadCheerioRoot","simulate","event","_this10","_len2","_key2","_this10$RENDERER","simulateEvent","simulateError","error","_this11","thisNode","rootNode","propsOfNode","_this12","_state","_this13","_context","allChildren","childrenOfNode","childAt","index","_this14","parents","_this15","allParents","parent","closest","matchingAncestors","first","findWhere","shallow","_this16","prop","propName","invoke","_this17","handler","response","renderProp","_this18","RangeError","hasOwn","propValue","wrapped","typeOfNode","hasClass","className","indexOf","hasClassName","fn","_this19","_this20","reduce","_this21","initialValue","accum","reduceRight","_this22","begin","end","someWhere","_this23","everyWhere","_this24","_this25","flattened","flat","_this26","last","isEmpty","exists","fnName","_len3","_key3","debug","debugNodes","tap","intercepter","_this27","el","hostNodes","updatePrimaryRootContext","primaryWrapper","primaryRenderer","primaryNode","_getContextFromWrappi2","prevProviderValues","isContextConsumer","Consumer","Provider","getProviderFromConsumer","newValue","oldValue","_ShallowWrapper","_this28","_len4","_key4","result","_len5","_key5","ITERATOR_SYMBOL","iter","next","done","privateWarning","extraMessage","trim","_default","exports","module","default"],"sources":["../src/ShallowWrapper.js"],"sourcesContent":["import flat from 'array.prototype.flat';\nimport hasOwn from 'hasown';\nimport shallowEqual from 'enzyme-shallow-equal';\nimport trim from 'string.prototype.trim';\n\nimport {\n  nodeEqual,\n  nodeMatches,\n  containsChildrenSubArray,\n  withSetStateAllowed,\n  typeOfNode,\n  isReactElementAlike,\n  displayNameOfNode,\n  isCustomComponent,\n  isCustomComponentElement,\n  ITERATOR_SYMBOL,\n  makeOptions,\n  sym,\n  privateSet,\n  cloneElement,\n  spyMethod,\n  isEmptyValue,\n  loadCheerioRoot,\n} from './Utils';\nimport getAdapter from './getAdapter';\nimport { debugNodes } from './Debug';\nimport {\n  propsOfNode,\n  getTextFromNode,\n  hasClassName,\n  childrenOfNode,\n  parentsOfNode,\n  treeFilter,\n} from './RSTTraversal';\nimport { buildPredicate, reduceTreesBySelector } from './selectors';\n\nconst NODE = sym('__node__');\nconst NODES = sym('__nodes__');\nconst RENDERER = sym('__renderer__');\nconst UNRENDERED = sym('__unrendered__');\nconst ROOT = sym('__root__');\nconst OPTIONS = sym('__options__');\nconst SET_STATE = sym('__setState__');\nconst ROOT_NODES = sym('__rootNodes__');\nconst CHILD_CONTEXT = sym('__childContext__');\nconst WRAPPING_COMPONENT = sym('__wrappingComponent__');\nconst PRIMARY_WRAPPER = sym('__primaryWrapper__');\nconst ROOT_FINDER = sym('__rootFinder__');\nconst PROVIDER_VALUES = sym('__providerValues__');\n\n/**\n * Finds all nodes in the current wrapper nodes' render trees that match the provided predicate\n * function.\n *\n * @param {ShallowWrapper} wrapper\n * @param {Function} predicate\n * @param {Function} filter\n * @returns {ShallowWrapper}\n */\nfunction findWhereUnwrapped(wrapper, predicate, filter = treeFilter) {\n  return wrapper.flatMap((n) => filter(n.getNodeInternal(), predicate));\n}\n\n/**\n * Returns a new wrapper instance with only the nodes of the current wrapper instance that match\n * the provided predicate function.\n *\n * @param {ShallowWrapper} wrapper\n * @param {Function} predicate\n * @returns {ShallowWrapper}\n */\nfunction filterWhereUnwrapped(wrapper, predicate) {\n  return wrapper.wrap(wrapper.getNodesInternal().filter(predicate).filter(Boolean));\n}\n\n/**\n * Ensure options passed to ShallowWrapper are valid. Throws otherwise.\n * @param {Object} options\n */\nfunction validateOptions(options) {\n  const {\n    lifecycleExperimental,\n    disableLifecycleMethods,\n    enableComponentDidUpdateOnSetState,\n    supportPrevContextArgumentOfComponentDidUpdate,\n    lifecycles = {},\n  } = options;\n  if (typeof lifecycleExperimental !== 'undefined' && typeof lifecycleExperimental !== 'boolean') {\n    throw new Error('lifecycleExperimental must be either true or false if provided');\n  }\n\n  if (typeof disableLifecycleMethods !== 'undefined' && typeof disableLifecycleMethods !== 'boolean') {\n    throw new Error('disableLifecycleMethods must be either true or false if provided');\n  }\n\n  if (\n    lifecycleExperimental != null\n    && disableLifecycleMethods != null\n    && lifecycleExperimental === disableLifecycleMethods\n  ) {\n    throw new Error('lifecycleExperimental and disableLifecycleMethods cannot be set to the same value');\n  }\n\n  if (\n    typeof enableComponentDidUpdateOnSetState !== 'undefined'\n    && lifecycles.componentDidUpdate\n    && lifecycles.componentDidUpdate.onSetState !== enableComponentDidUpdateOnSetState\n  ) {\n    throw new TypeError('the legacy enableComponentDidUpdateOnSetState option should be matched by `lifecycles: { componentDidUpdate: { onSetState: true } }`, for compatibility');\n  }\n\n  if (\n    typeof supportPrevContextArgumentOfComponentDidUpdate !== 'undefined'\n    && lifecycles.componentDidUpdate\n    && lifecycles.componentDidUpdate.prevContext !== supportPrevContextArgumentOfComponentDidUpdate\n  ) {\n    throw new TypeError('the legacy supportPrevContextArgumentOfComponentDidUpdate option should be matched by `lifecycles: { componentDidUpdate: { prevContext: true } }`, for compatibility');\n  }\n}\n\nfunction getAdapterLifecycles({ options }) {\n  const {\n    lifecycles = {},\n    enableComponentDidUpdateOnSetState,\n    supportPrevContextArgumentOfComponentDidUpdate,\n  } = options;\n\n  const hasLegacySetStateArg = typeof enableComponentDidUpdateOnSetState !== 'undefined';\n  const hasLegacyPrevContextArg = typeof supportPrevContextArgumentOfComponentDidUpdate !== 'undefined';\n  const componentDidUpdate = hasLegacySetStateArg || hasLegacyPrevContextArg\n    ? {\n      ...(hasLegacySetStateArg && {\n        onSetState: !!enableComponentDidUpdateOnSetState,\n      }),\n      ...(hasLegacyPrevContextArg && {\n        prevContext: !!supportPrevContextArgumentOfComponentDidUpdate,\n      }),\n    }\n    : null;\n  const { getDerivedStateFromProps: originalGDSFP } = lifecycles;\n  const getDerivedStateFromProps = originalGDSFP ? {\n    hasShouldComponentUpdateBug: !!originalGDSFP.hasShouldComponentUpdateBug,\n  } : false;\n\n  return {\n    ...lifecycles,\n    setState: {\n      ...lifecycles.setState,\n    },\n    getChildContext: {\n      calledByRenderer: true,\n      ...lifecycles.getChildContext,\n    },\n    ...(componentDidUpdate && { componentDidUpdate }),\n    getDerivedStateFromProps,\n  };\n}\n\nfunction getRootNode(node) {\n  if (node.nodeType === 'host') {\n    return node;\n  }\n  return node.rendered;\n}\n\nfunction getRootNodeInternal(wrapper) {\n  if (wrapper[ROOT].length !== 1) {\n    throw new Error('getRootNodeInternal(wrapper) can only be called when wrapper wraps one node');\n  }\n  if (wrapper[ROOT] !== wrapper) {\n    return wrapper[ROOT_NODES][0];\n  }\n  return wrapper[ROOT][NODE];\n}\n\nfunction nodeParents(wrapper, node) {\n  return parentsOfNode(node, getRootNodeInternal(wrapper));\n}\n\nfunction privateSetNodes(wrapper, nodes) {\n  if (!Array.isArray(nodes)) {\n    privateSet(wrapper, NODE, nodes);\n    privateSet(wrapper, NODES, [nodes]);\n  } else {\n    privateSet(wrapper, NODE, nodes[0]);\n    privateSet(wrapper, NODES, nodes);\n  }\n  privateSet(wrapper, 'length', wrapper[NODES].length);\n}\n\nfunction pureComponentShouldComponentUpdate(prevProps, props, prevState, state) {\n  return !shallowEqual(prevProps, props) || !shallowEqual(prevState, state);\n}\n\nfunction isPureComponent(instance) {\n  return instance && instance.isPureReactComponent;\n}\n\nfunction getChildContext(node, hierarchy, renderer) {\n  const { instance, type: Component } = node;\n  const componentName = displayNameOfNode(node);\n  // Warn like react if childContextTypes is not defined:\n  // https://github.com/facebook/react/blob/1454a8be03794f5e0b23a7e7696cbbbdcf8b0f5d/packages/react-dom/src/server/ReactPartialRenderer.js#L639-L646\n  if (typeof Component.childContextTypes !== 'object') {\n    // eslint-disable-next-line no-console\n    console.warn(\n      `${componentName}.getChildContext(): childContextTypes must be defined in order to use getChildContext().`,\n    );\n    return {};\n  }\n  // Check childContextTypes like react:\n  // https://github.com/facebook/react/blob/1454a8be03794f5e0b23a7e7696cbbbdcf8b0f5d/packages/react-dom/src/server/ReactPartialRenderer.js#L630-L637\n  const childContext = instance.getChildContext();\n  Object.keys(childContext).forEach((key) => {\n    if (!(key in Component.childContextTypes)) {\n      throw new Error(\n        `${componentName}.getChildContext(): key \"${key}\" is not defined in childContextTypes.`,\n      );\n    }\n  });\n  if (typeof renderer.checkPropTypes === 'function') {\n    renderer.checkPropTypes(Component.childContextTypes, childContext, 'child context', hierarchy);\n  }\n  return childContext;\n}\n\nfunction spyOnGetChildContextInitialRender(nodes, adapter) {\n  if (\n    !isCustomComponentElement(nodes, adapter)\n    || !nodes.type.prototype\n    || typeof nodes.type.prototype.getChildContext !== 'function'\n  ) {\n    return null;\n  }\n\n  return spyMethod(nodes.type.prototype, 'getChildContext');\n}\n\nfunction privateSetChildContext(adapter, wrapper, instance, renderedNode, getChildContextSpy) {\n  const renderer = wrapper[RENDERER];\n  // We only support parent-based context.\n  if (adapter.options.legacyContextMode !== 'parent') { return; }\n  if (getChildContextSpy) {\n    privateSet(wrapper, CHILD_CONTEXT, getChildContextSpy.getLastReturnValue());\n    getChildContextSpy.restore();\n  } else if (typeof instance.getChildContext === 'function') {\n    // If there's no spy but getChildContext is a function, that means our renderer\n    // is not going to call it for us, so we need to call it ourselves.\n    const nodeHierarchy = [wrapper[NODE]].concat(nodeParents(wrapper, wrapper[NODE]));\n    const childContext = getChildContext(renderedNode, nodeHierarchy, renderer);\n    privateSet(wrapper, CHILD_CONTEXT, childContext);\n  } else {\n    privateSet(wrapper, CHILD_CONTEXT, null);\n  }\n}\n\nfunction mockSCUIfgDSFPReturnNonNull(node, state) {\n  const { getDerivedStateFromProps } = node.type;\n\n  if (typeof getDerivedStateFromProps === 'function') {\n    // we try to fix a React shallow renderer bug here.\n    // (facebook/react#14607, which has been fixed in react 16.8):\n    // when gDSFP return derived state, it will set instance state in shallow renderer before SCU,\n    // this will cause `this.state` in sCU be the updated state, which is wrong behavior.\n    // so we have to wrap sCU to pass the old state to original sCU.\n    const { instance } = node;\n    const { restore } = spyMethod(\n      instance,\n      'shouldComponentUpdate',\n      (originalSCU) => function shouldComponentUpdate(...args) {\n        instance.state = state;\n        const sCUResult = originalSCU.apply(instance, args);\n        const [, nextState] = args;\n        instance.state = nextState;\n        restore();\n        return sCUResult;\n      },\n    );\n  }\n}\n\n/**\n * Recursively dive()s every custom component in a wrapper until\n * the target component is found.\n *\n * @param {ShallowWrapper} wrapper A ShallowWrapper to search\n * @param {ComponentType} target A react custom component that, when found, will end recursion\n * @param {Adapter} adapter An Enzyme adapter\n * @returns {ShallowWrapper|undefined} A ShallowWrapper for the target, or\n *  undefined if it can't be found\n */\nfunction deepRender(wrapper, target, adapter) {\n  const node = wrapper[NODE];\n  const element = node && adapter.nodeToElement(node);\n  if (wrapper.type() === target) {\n    return wrapper.dive();\n  }\n  if (element && isCustomComponentElement(element, adapter)) {\n    return deepRender(wrapper.dive(), target, adapter);\n  }\n  const children = wrapper.children();\n  for (let i = 0; i < children.length; i += 1) {\n    const found = deepRender(children.at(i), target, adapter);\n    if (typeof found !== 'undefined') {\n      return found;\n    }\n  }\n  return undefined;\n}\n\n/**\n * Deep-renders the `wrappingComponent` and returns the context that should\n * be accessible to the primary wrapper.\n *\n * @param {WrappingComponentWrapper} wrapper The `WrappingComponentWrapper` for a\n *  `wrappingComponent`\n * @param {Adapter} adapter An Enzyme adapter\n * @returns {object} An object containing an object of legacy context values and a Map of\n *  `createContext()` Provider values.\n */\nfunction getContextFromWrappingComponent(wrapper, adapter) {\n  const rootFinder = deepRender(wrapper, wrapper[ROOT_FINDER], adapter);\n  if (!rootFinder) {\n    throw new Error('`wrappingComponent` must render its children!');\n  }\n  return {\n    legacyContext: rootFinder[OPTIONS].context,\n    providerValues: rootFinder[PROVIDER_VALUES],\n  };\n}\n\n/**\n * Makes options specifically for `ShallowWrapper`. Most of the logic here is around rendering\n * a `wrappingComponent` (if one was provided) and adding the child context of that component\n * to `options.context`.\n *\n * @param {ReactElement} nodes the nodes passed to `ShallowWrapper`\n * @param {ShallowWrapper} root this `ShallowWrapper`'s parent. If this is passed, options are\n *  not transformed.\n * @param {*} passedOptions the options passed to `ShallowWrapper`.\n * @param {*} wrapper the `ShallowWrapper` itself\n * @returns {Object} the decorated and transformed options\n */\nfunction makeShallowOptions(nodes, root, passedOptions, wrapper) {\n  const options = makeOptions(passedOptions);\n  const adapter = getAdapter(passedOptions);\n  privateSet(options, PROVIDER_VALUES, passedOptions[PROVIDER_VALUES]);\n  if (root || !isCustomComponent(options.wrappingComponent, adapter)) {\n    return options;\n  }\n  if (typeof adapter.wrapWithWrappingComponent !== 'function') {\n    throw new TypeError('your adapter does not support `wrappingComponent`. Try upgrading it!');\n  }\n  const { node: wrappedNode, RootFinder } = adapter.wrapWithWrappingComponent(nodes, options);\n  // eslint-disable-next-line no-use-before-define\n  const wrappingComponent = new WrappingComponentWrapper(wrappedNode, wrapper, RootFinder);\n  const {\n    legacyContext: wrappingComponentLegacyContext,\n    providerValues: wrappingComponentProviderValues,\n  } = getContextFromWrappingComponent(wrappingComponent, adapter);\n  privateSet(wrapper, WRAPPING_COMPONENT, wrappingComponent);\n  return {\n    ...options,\n    context: {\n      ...options.context,\n      ...wrappingComponentLegacyContext,\n    },\n    [PROVIDER_VALUES]: wrappingComponentProviderValues,\n  };\n}\n\nfunction makeInheritedChildOptions(wrapper, options = {}) {\n  const childOptions = {\n    ...wrapper[OPTIONS],\n    ...options,\n    context: options.context || {\n      ...wrapper[OPTIONS].context,\n      ...wrapper[ROOT][CHILD_CONTEXT],\n    },\n  };\n  privateSet(childOptions, PROVIDER_VALUES, wrapper[ROOT][PROVIDER_VALUES]);\n  return childOptions;\n}\n\n/**\n * @class ShallowWrapper\n */\nclass ShallowWrapper {\n  constructor(nodes, root, passedOptions = {}) {\n    validateOptions(passedOptions);\n\n    const options = makeShallowOptions(nodes, root, passedOptions, this);\n    const adapter = getAdapter(options);\n    const lifecycles = getAdapterLifecycles(adapter);\n\n    // mounting a ShallowRender component\n    if (!root) {\n      if (!adapter.isValidElement(nodes)) {\n        throw new TypeError('ShallowWrapper can only wrap valid elements');\n      }\n\n      const getChildContextSpy = lifecycles.getChildContext.calledByRenderer\n        ? spyOnGetChildContextInitialRender(nodes, adapter)\n        : null;\n      privateSet(this, ROOT, this);\n      privateSet(this, UNRENDERED, nodes);\n      const renderer = adapter.createRenderer({ mode: 'shallow', ...options });\n      privateSet(this, RENDERER, renderer);\n      const providerValues = new Map(options[PROVIDER_VALUES] || []);\n      this[RENDERER].render(nodes, options.context, { providerValues });\n      const renderedNode = this[RENDERER].getNode();\n      privateSetNodes(this, getRootNode(renderedNode));\n      privateSet(this, OPTIONS, options);\n      privateSet(this, PROVIDER_VALUES, providerValues);\n\n      const { instance } = renderedNode;\n      if (instance && !options.disableLifecycleMethods) {\n        // Ensure to call componentDidUpdate when instance.setState is called\n        if (lifecycles.componentDidUpdate.onSetState && !instance[SET_STATE]) {\n          privateSet(instance, SET_STATE, instance.setState);\n          instance.setState = (updater, callback = undefined) => this.setState(\n            ...(callback == null ? [updater] : [updater, callback]),\n          );\n        }\n\n        if (typeof instance.componentDidMount === 'function') {\n          this[RENDERER].batchedUpdates(() => {\n            instance.componentDidMount();\n          });\n        }\n        privateSetChildContext(adapter, this, instance, renderedNode, getChildContextSpy);\n      }\n    // creating a child component through enzyme's ShallowWrapper APIs.\n    } else {\n      privateSet(this, ROOT, root);\n      privateSet(this, UNRENDERED, null);\n      privateSet(this, RENDERER, root[RENDERER]);\n      privateSetNodes(this, nodes);\n      privateSet(this, OPTIONS, root[OPTIONS]);\n      privateSet(this, ROOT_NODES, root[NODES]);\n      privateSet(this, PROVIDER_VALUES, null);\n    }\n  }\n\n  /**\n   * Returns the root wrapper\n   *\n   * @return {ShallowWrapper}\n   */\n  root() {\n    return this[ROOT];\n  }\n\n  /**\n   * Returns the wrapped component.\n   *\n   * @return {ReactComponent}\n   */\n  getNodeInternal() {\n    if (this.length !== 1) {\n      throw new Error('ShallowWrapper::getNode() can only be called when wrapping one node');\n    }\n    if (this[ROOT] === this) {\n      this.update();\n    }\n    return this[NODE];\n  }\n\n  /**\n   * Returns the the wrapped components.\n   *\n   * @return {Array<ReactComponent>}\n   */\n  getNodesInternal() {\n    if (this[ROOT] === this && this.length === 1) {\n      this.update();\n    }\n    return this[NODES];\n  }\n\n  /**\n   * Returns the wrapped ReactElement.\n   *\n   * @return {ReactElement}\n   */\n  getElement() {\n    return this.single('getElement', (n) => getAdapter(this[OPTIONS]).nodeToElement(n));\n  }\n\n  /**\n   * Returns the wrapped ReactElements.\n   *\n   * @return {Array<ReactElement>}\n   */\n  getElements() {\n    return this.getNodesInternal().map((n) => getAdapter(this[OPTIONS]).nodeToElement(n));\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  getNode() {\n    throw new Error('ShallowWrapper::getNode() is no longer supported. Use ShallowWrapper::getElement() instead');\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  getNodes() {\n    throw new Error('ShallowWrapper::getNodes() is no longer supported. Use ShallowWrapper::getElements() instead');\n  }\n\n  /**\n   * Gets the instance of the component being rendered as the root node passed into `shallow()`.\n   *\n   * NOTE: can only be called on a wrapper instance that is also the root instance.\n   *\n   * Example:\n   * ```\n   * const wrapper = shallow(<MyComponent />);\n   * const inst = wrapper.instance();\n   * expect(inst).to.be.instanceOf(MyComponent);\n   * ```\n   * @returns {ReactComponent}\n   */\n  instance() {\n    if (this[ROOT] !== this) {\n      throw new Error('ShallowWrapper::instance() can only be called on the root');\n    }\n    return this[RENDERER].getNode().instance;\n  }\n\n  /**\n   * If a `wrappingComponent` was passed in `options`, this methods returns a `ShallowWrapper`\n   * around the rendered `wrappingComponent`. This `ShallowWrapper` can be used to update the\n   * `wrappingComponent`'s props, state, etc.\n   *\n   * @returns ShallowWrapper\n   */\n  getWrappingComponent() {\n    if (this[ROOT] !== this) {\n      throw new Error('ShallowWrapper::getWrappingComponent() can only be called on the root');\n    }\n    if (!this[OPTIONS].wrappingComponent) {\n      throw new Error('ShallowWrapper::getWrappingComponent() can only be called on a wrapper that was originally passed a `wrappingComponent` option');\n    }\n    return this[WRAPPING_COMPONENT];\n  }\n\n  /**\n   * Forces a re-render. Useful to run before checking the render output if something external\n   * may be updating the state of the component somewhere.\n   *\n   * NOTE: can only be called on a wrapper instance that is also the root instance.\n   *\n   * @returns {ShallowWrapper}\n   */\n  update() {\n    if (this[ROOT] !== this) {\n      throw new Error('ShallowWrapper::update() can only be called on the root');\n    }\n    if (this.length !== 1) {\n      throw new Error('ShallowWrapper::update() can only be called when wrapping one node');\n    }\n    privateSetNodes(this, getRootNode(this[RENDERER].getNode()));\n    return this;\n  }\n\n  /**\n   * A method that unmounts the component. This can be used to simulate a component going through\n   * and unmount/mount lifecycle.\n   * @returns {ShallowWrapper}\n   */\n  unmount() {\n    this[RENDERER].unmount();\n    if (this[ROOT][WRAPPING_COMPONENT]) {\n      this[ROOT][WRAPPING_COMPONENT].unmount();\n    }\n    return this;\n  }\n\n  /**\n   * A method is for re-render with new props and context.\n   * This calls componentDidUpdate method if disableLifecycleMethods is not enabled.\n   *\n   * NOTE: can only be called on a wrapper instance that is also the root instance.\n   *\n   * @param {Object} props\n   * @param {Object} context\n   * @returns {ShallowWrapper}\n   */\n  rerender(props, context) {\n    const adapter = getAdapter(this[OPTIONS]);\n    this.single('rerender', () => {\n      withSetStateAllowed(() => {\n        // NOTE(lmr): In react 16, instances will be null for SFCs, but\n        // rerendering with props/context is still a valid thing to do. In\n        // this case, state will be undefined, but props/context will exist.\n        const node = this[RENDERER].getNode();\n        const instance = node.instance || {};\n        const type = node.type || {};\n        const { state } = instance;\n        const prevProps = instance.props || this[UNRENDERED].props;\n        const prevContext = instance.context || this[OPTIONS].context;\n        const nextContext = context || prevContext;\n        if (context) {\n          this[OPTIONS] = { ...this[OPTIONS], context: nextContext };\n        }\n        this[RENDERER].batchedUpdates(() => {\n          // When shouldComponentUpdate returns false we shouldn't call componentDidUpdate.\n          // so we spy shouldComponentUpdate to get the result.\n          const lifecycles = getAdapterLifecycles(adapter);\n          let shouldRender = true;\n          let shouldComponentUpdateSpy;\n          let getChildContextSpy;\n          if (\n            !this[OPTIONS].disableLifecycleMethods\n            && instance\n          ) {\n            if (typeof instance.shouldComponentUpdate === 'function') {\n              const { getDerivedStateFromProps: gDSFP } = lifecycles;\n              if (gDSFP && gDSFP.hasShouldComponentUpdateBug) {\n                mockSCUIfgDSFPReturnNonNull(node, state);\n              }\n              shouldComponentUpdateSpy = spyMethod(instance, 'shouldComponentUpdate');\n            }\n            if (\n              lifecycles.getChildContext.calledByRenderer\n              && typeof instance.getChildContext === 'function'\n            ) {\n              getChildContextSpy = spyMethod(instance, 'getChildContext');\n            }\n          }\n          if (!shouldComponentUpdateSpy && isPureComponent(instance)) {\n            shouldRender = pureComponentShouldComponentUpdate(\n              prevProps,\n              props,\n              state,\n              instance.state,\n            );\n          }\n          if (props) this[UNRENDERED] = cloneElement(adapter, this[UNRENDERED], props);\n          this[RENDERER].render(this[UNRENDERED], nextContext, {\n            providerValues: this[PROVIDER_VALUES],\n          });\n          if (shouldComponentUpdateSpy) {\n            shouldRender = shouldComponentUpdateSpy.getLastReturnValue();\n            shouldComponentUpdateSpy.restore();\n          }\n          if (\n            shouldRender\n            && !this[OPTIONS].disableLifecycleMethods\n            && instance\n          ) {\n            privateSetChildContext(adapter, this, instance, node, getChildContextSpy);\n            if (lifecycles.getSnapshotBeforeUpdate) {\n              let snapshot;\n              if (typeof instance.getSnapshotBeforeUpdate === 'function') {\n                snapshot = instance.getSnapshotBeforeUpdate(prevProps, state);\n              }\n              if (\n                lifecycles.componentDidUpdate\n                && typeof instance.componentDidUpdate === 'function'\n                && (\n                  !state\n                  || shallowEqual(state, this.instance().state)\n                  || typeof type.getDerivedStateFromProps === 'function'\n                )\n              ) {\n                instance.componentDidUpdate(prevProps, state, snapshot);\n              }\n            } else if (\n              lifecycles.componentDidUpdate\n              && typeof instance.componentDidUpdate === 'function'\n            ) {\n              if (lifecycles.componentDidUpdate.prevContext) {\n                instance.componentDidUpdate(prevProps, state, prevContext);\n              } else if (!state || shallowEqual(this.instance().state, state)) {\n                instance.componentDidUpdate(prevProps, state);\n              }\n            }\n          // If it doesn't need to rerender, update only its props.\n          } else if (!shallowEqual(props, instance.props)) {\n            instance.props = (Object.freeze || Object)({ ...instance.props, ...props });\n          }\n          this.update();\n        });\n      });\n    });\n    return this;\n  }\n\n  /**\n   * A method that sets the props of the root component, and re-renders. Useful for when you are\n   * wanting to test how the component behaves over time with changing props. Calling this, for\n   * instance, will call the `componentWillReceiveProps` lifecycle method.\n   *\n   * Similar to `setState`, this method accepts a props object and will merge it in with the already\n   * existing props.\n   *\n   * NOTE: can only be called on a wrapper instance that is also the root instance.\n   *\n   * @param {Object} props object\n   * @param {Function} cb - callback function\n   * @returns {ShallowWrapper}\n   */\n  setProps(props, callback = undefined) {\n    if (this[ROOT] !== this) {\n      throw new Error('ShallowWrapper::setProps() can only be called on the root');\n    }\n    if (arguments.length > 1 && typeof callback !== 'function') {\n      throw new TypeError('ReactWrapper::setProps() expects a function as its second argument');\n    }\n    this.rerender(props);\n    if (callback) {\n      callback();\n    }\n    return this;\n  }\n\n  /**\n   * A method to invoke `setState` on the root component instance similar to how you might in the\n   * definition of the component, and re-renders.  This method is useful for testing your component\n   * in hard to achieve states, however should be used sparingly. If possible, you should utilize\n   * your component's external API in order to get it into whatever state you want to test, in order\n   * to be as accurate of a test as possible. This is not always practical, however.\n   *\n   * NOTE: can only be called on a wrapper instance that is also the root instance.\n   *\n   * @param {Object} state to merge\n   * @param {Function} cb - callback function\n   * @returns {ShallowWrapper}\n   */\n  setState(state, callback = undefined) {\n    if (this[ROOT] !== this) {\n      throw new Error('ShallowWrapper::setState() can only be called on the root');\n    }\n    if (this.instance() === null || this[RENDERER].getNode().nodeType !== 'class') {\n      throw new Error('ShallowWrapper::setState() can only be called on class components');\n    }\n    if (arguments.length > 1 && typeof callback !== 'function') {\n      throw new TypeError('ReactWrapper::setState() expects a function as its second argument');\n    }\n\n    this.single('setState', () => {\n      withSetStateAllowed(() => {\n        const adapter = getAdapter(this[OPTIONS]);\n\n        const lifecycles = getAdapterLifecycles(adapter);\n\n        const node = this[RENDERER].getNode();\n        const { instance } = node;\n        const prevProps = instance.props;\n        const prevState = instance.state;\n        const prevContext = instance.context;\n\n        const statePayload = typeof state === 'function'\n          ? state.call(instance, prevState, prevProps)\n          : state;\n\n        // returning null or undefined prevents the update in React 16+\n        // https://github.com/facebook/react/pull/12756\n        const maybeHasUpdate = !lifecycles.setState.skipsComponentDidUpdateOnNullish\n          || statePayload != null;\n\n        // When shouldComponentUpdate returns false we shouldn't call componentDidUpdate.\n        // so we spy shouldComponentUpdate to get the result.\n        let shouldComponentUpdateSpy;\n        let getChildContextSpy;\n        let shouldRender = true;\n        if (\n          !this[OPTIONS].disableLifecycleMethods\n          && instance\n        ) {\n          if (\n            lifecycles.componentDidUpdate\n            && lifecycles.componentDidUpdate.onSetState\n            && typeof instance.shouldComponentUpdate === 'function'\n          ) {\n            const { getDerivedStateFromProps: gDSFP } = lifecycles;\n            if (gDSFP && gDSFP.hasShouldComponentUpdateBug) {\n              mockSCUIfgDSFPReturnNonNull(node, state);\n            }\n            shouldComponentUpdateSpy = spyMethod(instance, 'shouldComponentUpdate');\n          }\n          if (\n            lifecycles.getChildContext.calledByRenderer\n            && typeof instance.getChildContext === 'function'\n          ) {\n            getChildContextSpy = spyMethod(instance, 'getChildContext');\n          }\n        }\n        if (!shouldComponentUpdateSpy && isPureComponent(instance)) {\n          shouldRender = pureComponentShouldComponentUpdate(\n            prevProps,\n            instance.props,\n            prevState,\n            { ...prevState, ...statePayload },\n          );\n        }\n\n        // We don't pass the setState callback here\n        // to guarantee to call the callback after finishing the render\n        if (instance[SET_STATE]) {\n          instance[SET_STATE](statePayload);\n        } else {\n          instance.setState(statePayload);\n        }\n        if (shouldComponentUpdateSpy) {\n          shouldRender = shouldComponentUpdateSpy.getLastReturnValue();\n          shouldComponentUpdateSpy.restore();\n        }\n        if (\n          maybeHasUpdate\n          && shouldRender\n          && !this[OPTIONS].disableLifecycleMethods\n        ) {\n          privateSetChildContext(adapter, this, instance, node, getChildContextSpy);\n          if (\n            lifecycles.componentDidUpdate\n            && lifecycles.componentDidUpdate.onSetState\n          ) {\n            if (\n              lifecycles.getSnapshotBeforeUpdate\n              && typeof instance.getSnapshotBeforeUpdate === 'function'\n            ) {\n              const snapshot = instance.getSnapshotBeforeUpdate(prevProps, prevState);\n              if (typeof instance.componentDidUpdate === 'function') {\n                instance.componentDidUpdate(prevProps, prevState, snapshot);\n              }\n            } else if (typeof instance.componentDidUpdate === 'function') {\n              if (lifecycles.componentDidUpdate.prevContext) {\n                instance.componentDidUpdate(prevProps, prevState, prevContext);\n              } else {\n                instance.componentDidUpdate(prevProps, prevState);\n              }\n            }\n          }\n        }\n        this.update();\n        // call the setState callback\n        if (callback) {\n          if (adapter.invokeSetStateCallback) {\n            adapter.invokeSetStateCallback(instance, callback);\n          } else {\n            callback.call(instance);\n          }\n        }\n      });\n    });\n    return this;\n  }\n\n  /**\n   * A method that sets the context of the root component, and re-renders. Useful for when you are\n   * wanting to test how the component behaves over time with changing contexts.\n   *\n   * NOTE: can only be called on a wrapper instance that is also the root instance.\n   *\n   * @param {Object} context object\n   * @returns {ShallowWrapper}\n   */\n  setContext(context) {\n    if (this[ROOT] !== this) {\n      throw new Error('ShallowWrapper::setContext() can only be called on the root');\n    }\n    if (!this[OPTIONS].context) {\n      throw new Error('ShallowWrapper::setContext() can only be called on a wrapper that was originally passed a context option');\n    }\n    return this.rerender(null, context);\n  }\n\n  /**\n   * Whether or not a given react element exists in the shallow render tree.\n   *\n   * Example:\n   * ```\n   * const wrapper = shallow(<MyComponent />);\n   * expect(wrapper.contains(<div className=\"foo bar\" />)).to.equal(true);\n   * ```\n   *\n   * @param {ReactElement|Array<ReactElement>} nodeOrNodes\n   * @returns {Boolean}\n   */\n  contains(nodeOrNodes) {\n    const adapter = getAdapter(this[OPTIONS]);\n    if (!isReactElementAlike(nodeOrNodes, adapter)) {\n      throw new Error('ShallowWrapper::contains() can only be called with a ReactElement (or an array of them), a string, or a number as an argument.');\n    }\n    const predicate = Array.isArray(nodeOrNodes)\n      ? (other) => containsChildrenSubArray(\n        nodeEqual,\n        other,\n        nodeOrNodes.map((node) => adapter.elementToNode(node)),\n      )\n      : (other) => nodeEqual(adapter.elementToNode(nodeOrNodes), other);\n\n    return findWhereUnwrapped(this, predicate).length > 0;\n  }\n\n  /**\n   * Whether or not a given react element exists in the shallow render tree.\n   * Match is based on the expected element and not on wrappers element.\n   * It will determine if one of the wrappers element \"looks like\" the expected\n   * element by checking if all props of the expected element are present\n   * on the wrappers element and equals to each other.\n   *\n   * Example:\n   * ```\n   * // MyComponent outputs <div><div class=\"foo\">Hello</div></div>\n   * const wrapper = shallow(<MyComponent />);\n   * expect(wrapper.containsMatchingElement(<div>Hello</div>)).to.equal(true);\n   * ```\n   *\n   * @param {ReactElement} node\n   * @returns {Boolean}\n   */\n  containsMatchingElement(node) {\n    const adapter = getAdapter(this[OPTIONS]);\n    const rstNode = adapter.elementToNode(node);\n    const predicate = (other) => nodeMatches(rstNode, other, (a, b) => a <= b);\n    return findWhereUnwrapped(this, predicate).length > 0;\n  }\n\n  /**\n   * Whether or not all the given react elements exist in the shallow render tree.\n   * Match is based on the expected element and not on wrappers element.\n   * It will determine if one of the wrappers element \"looks like\" the expected\n   * element by checking if all props of the expected element are present\n   * on the wrappers element and equals to each other.\n   *\n   * Example:\n   * ```\n   * const wrapper = shallow(<MyComponent />);\n   * expect(wrapper.containsAllMatchingElements([\n   *   <div>Hello</div>,\n   *   <div>Goodbye</div>,\n   * ])).to.equal(true);\n   * ```\n   *\n   * @param {Array<ReactElement>} nodes\n   * @returns {Boolean}\n   */\n  containsAllMatchingElements(nodes) {\n    if (!Array.isArray(nodes)) {\n      throw new TypeError('nodes should be an Array');\n    }\n\n    return nodes.every((node) => this.containsMatchingElement(node));\n  }\n\n  /**\n   * Whether or not one of the given react elements exists in the shallow render tree.\n   * Match is based on the expected element and not on wrappers element.\n   * It will determine if one of the wrappers element \"looks like\" the expected\n   * element by checking if all props of the expected element are present\n   * on the wrappers element and equals to each other.\n   *\n   * Example:\n   * ```\n   * const wrapper = shallow(<MyComponent />);\n   * expect(wrapper.containsAnyMatchingElements([\n   *   <div>Hello</div>,\n   *   <div>Goodbye</div>,\n   * ])).to.equal(true);\n   * ```\n   *\n   * @param {Array<ReactElement>} nodes\n   * @returns {Boolean}\n   */\n  containsAnyMatchingElements(nodes) {\n    return Array.isArray(nodes) && nodes.some((node) => this.containsMatchingElement(node));\n  }\n\n  /**\n   * Whether or not a given react element exists in the render tree.\n   *\n   * Example:\n   * ```\n   * const wrapper = shallow(<MyComponent />);\n   * expect(wrapper.contains(<div className=\"foo bar\" />)).to.equal(true);\n   * ```\n   *\n   * @param {ReactElement} node\n   * @returns {Boolean}\n   */\n  equals(node) {\n    return this.single('equals', () => nodeEqual(this.getNodeInternal(), node));\n  }\n\n  /**\n   * Whether or not a given react element matches the render tree.\n   * Match is based on the expected element and not on wrapper root node.\n   * It will determine if the wrapper root node \"looks like\" the expected\n   * element by checking if all props of the expected element are present\n   * on the wrapper root node and equals to each other.\n   *\n   * Example:\n   * ```\n   * // MyComponent outputs <div class=\"foo\">Hello</div>\n   * const wrapper = shallow(<MyComponent />);\n   * expect(wrapper.matchesElement(<div>Hello</div>)).to.equal(true);\n   * ```\n   *\n   * @param {ReactElement} node\n   * @returns {Boolean}\n   */\n  matchesElement(node) {\n    return this.single('matchesElement', () => {\n      const adapter = getAdapter(this[OPTIONS]);\n      const rstNode = adapter.elementToNode(node);\n      return nodeMatches(rstNode, this.getNodeInternal(), (a, b) => a <= b);\n    });\n  }\n\n  /**\n   * Finds every node in the render tree of the current wrapper that matches the provided selector.\n   *\n   * @param {EnzymeSelector} selector\n   * @returns {ShallowWrapper}\n   */\n  find(selector) {\n    return this.wrap(reduceTreesBySelector(selector, this.getNodesInternal()));\n  }\n\n  /**\n   * Returns whether or not current node matches a provided selector.\n   *\n   * NOTE: can only be called on a wrapper of a single node.\n   *\n   * @param {EnzymeSelector} selector\n   * @returns {boolean}\n   */\n  is(selector) {\n    const predicate = buildPredicate(selector);\n    return this.single('is', (n) => predicate(n));\n  }\n\n  /**\n   * Returns true if the component rendered nothing, i.e., null or false.\n   *\n   * @returns {boolean}\n   */\n  isEmptyRender() {\n    const nodes = this.getNodesInternal();\n\n    return nodes.every((n) => isEmptyValue(n));\n  }\n\n  /**\n   * Returns a new wrapper instance with only the nodes of the current wrapper instance that match\n   * the provided predicate function. The predicate should receive a wrapped node as its first\n   * argument.\n   *\n   * @param {Function} predicate\n   * @returns {ShallowWrapper}\n   */\n  filterWhere(predicate) {\n    return filterWhereUnwrapped(this, (n) => predicate(this.wrap(n)));\n  }\n\n  /**\n   * Returns a new wrapper instance with only the nodes of the current wrapper instance that match\n   * the provided selector.\n   *\n   * @param {EnzymeSelector} selector\n   * @returns {ShallowWrapper}\n   */\n  filter(selector) {\n    const predicate = buildPredicate(selector);\n    return filterWhereUnwrapped(this, predicate);\n  }\n\n  /**\n   * Returns a new wrapper instance with only the nodes of the current wrapper that did not match\n   * the provided selector. Essentially the inverse of `filter`.\n   *\n   * @param {EnzymeSelector} selector\n   * @returns {ShallowWrapper}\n   */\n  not(selector) {\n    const predicate = buildPredicate(selector);\n    return filterWhereUnwrapped(this, (n) => !predicate(n));\n  }\n\n  /**\n   * Returns a string of the rendered text of the current render tree.  This function should be\n   * looked at with skepticism if being used to test what the actual HTML output of the component\n   * will be. If that is what you would like to test, use enzyme's `render` function instead.\n   *\n   * NOTE: can only be called on a wrapper of a single node.\n   *\n   * @returns {String}\n   */\n  text() {\n    return this.single('text', getTextFromNode);\n  }\n\n  /**\n   * Returns the HTML of the node.\n   *\n   * NOTE: can only be called on a wrapper of a single node.\n   *\n   * @returns {String}\n   */\n  html() {\n    return this.single('html', (n) => {\n      if (this.type() === null) return null;\n      const adapter = getAdapter(this[OPTIONS]);\n      const renderer = adapter.createRenderer({ ...this[OPTIONS], mode: 'string' });\n      return renderer.render(adapter.nodeToElement(n));\n    });\n  }\n\n  /**\n   * Returns the current node rendered to HTML and wrapped in a CheerioWrapper.\n   *\n   * NOTE: can only be called on a wrapper of a single node.\n   *\n   * @returns {CheerioWrapper}\n   */\n  render() {\n    const html = this.html();\n    return loadCheerioRoot(html);\n  }\n\n  /**\n   * Used to simulate events. Pass an eventname and (optionally) event arguments. This method of\n   * testing events should be met with some skepticism.\n   *\n   * @param {String} event\n   * @param {Array} args\n   * @returns {ShallowWrapper}\n   */\n  simulate(event, ...args) {\n    return this.single('simulate', (n) => {\n      this[RENDERER].simulateEvent(n, event, ...args);\n      this[ROOT].update();\n      return this;\n    });\n  }\n\n  /**\n   * Used to simulate throwing a rendering error. Pass an error to throw.\n   *\n   * @param {String} error\n   * @returns {ShallowWrapper}\n   */\n  simulateError(error) {\n    // in shallow, the \"root\" is the \"rendered\" thing.\n\n    return this.single('simulateError', (thisNode) => {\n      if (thisNode.nodeType === 'host') {\n        throw new TypeError('ShallowWrapper::simulateError() can only be called on custom components');\n      }\n\n      const renderer = this[RENDERER];\n      if (typeof renderer.simulateError !== 'function') {\n        throw new TypeError('your adapter does not support `simulateError`. Try upgrading it!');\n      }\n\n      const rootNode = getRootNodeInternal(this);\n      const nodeHierarchy = [thisNode].concat(nodeParents(this, thisNode));\n      renderer.simulateError(nodeHierarchy, rootNode, error);\n\n      return this;\n    });\n  }\n\n  /**\n   * Returns the props hash for the current node of the wrapper.\n   *\n   * NOTE: can only be called on a wrapper of a single node.\n   *\n   * @returns {Object}\n   */\n  props() {\n    return this.single('props', propsOfNode);\n  }\n\n  /**\n   * Returns the state hash for the root node of the wrapper. Optionally pass in a prop name and it\n   * will return just that value.\n   *\n   * NOTE: can only be called on a wrapper of a single node.\n   *\n   * @param {String} name (optional)\n   * @returns {*}\n   */\n  state(name) {\n    if (this[ROOT] !== this) {\n      throw new Error('ShallowWrapper::state() can only be called on the root');\n    }\n    if (this.instance() === null || this[RENDERER].getNode().nodeType !== 'class') {\n      throw new Error('ShallowWrapper::state() can only be called on class components');\n    }\n    const _state = this.single('state', () => this.instance().state);\n    if (typeof name !== 'undefined') {\n      if (_state == null) {\n        throw new TypeError(`ShallowWrapper::state(\"${name}\") requires that \\`state\\` not be \\`null\\` or \\`undefined\\``);\n      }\n      return _state[name];\n    }\n    return _state;\n  }\n\n  /**\n   * Returns the context hash for the root node of the wrapper.\n   * Optionally pass in a prop name and it will return just that value.\n   *\n   * NOTE: can only be called on a wrapper of a single node.\n   *\n   * @param {String} name (optional)\n   * @returns {*}\n   */\n  context(name) {\n    if (this[ROOT] !== this) {\n      throw new Error('ShallowWrapper::context() can only be called on the root');\n    }\n    if (!this[OPTIONS].context) {\n      throw new Error('ShallowWrapper::context() can only be called on a wrapper that was originally passed a context option');\n    }\n    if (this.instance() === null) {\n      throw new Error('ShallowWrapper::context() can only be called on wrapped nodes that have a non-null instance');\n    }\n    const _context = this.single('context', () => this.instance().context);\n    if (name) {\n      return _context[name];\n    }\n    return _context;\n  }\n\n  /**\n   * Returns a new wrapper with all of the children of the current wrapper.\n   *\n   * @param {EnzymeSelector} [selector]\n   * @returns {ShallowWrapper}\n   */\n  children(selector) {\n    const allChildren = this.flatMap((n) => childrenOfNode(n.getNodeInternal()));\n    return selector ? allChildren.filter(selector) : allChildren;\n  }\n\n  /**\n   * Returns a new wrapper with a specific child\n   *\n   * @param {Number} [index]\n   * @returns {ShallowWrapper}\n   */\n  childAt(index) {\n    return this.single('childAt', () => this.children().at(index));\n  }\n\n  /**\n   * Returns a wrapper around all of the parents/ancestors of the wrapper. Does not include the node\n   * in the current wrapper.\n   *\n   * NOTE: can only be called on a wrapper of a single node.\n   *\n   * @param {EnzymeSelector} [selector]\n   * @returns {ShallowWrapper}\n   */\n  parents(selector) {\n    return this.single('parents', (n) => {\n      const allParents = this.wrap(nodeParents(this, n));\n      return selector ? allParents.filter(selector) : allParents;\n    });\n  }\n\n  /**\n   * Returns a wrapper around the immediate parent of the current node.\n   *\n   * @returns {ShallowWrapper}\n   */\n  parent() {\n    return this.flatMap((n) => [n.parents().get(0)]);\n  }\n\n  /**\n   *\n   * @param {EnzymeSelector} selector\n   * @returns {ShallowWrapper}\n   */\n  closest(selector) {\n    if (this.is(selector)) {\n      return this;\n    }\n    const matchingAncestors = this.parents().filter(selector);\n    return matchingAncestors.length > 0 ? matchingAncestors.first() : this.findWhere(() => false);\n  }\n\n  /**\n   * Shallow renders the current node and returns a shallow wrapper around it.\n   *\n   * NOTE: can only be called on wrapper of a single node.\n   *\n   * @param {Object} options\n   * @returns {ShallowWrapper}\n   */\n  shallow(options = {}) {\n    return this.single('shallow', (n) => {\n      const childOptions = makeInheritedChildOptions(this, options);\n      return this.wrap(getAdapter(this[OPTIONS]).nodeToElement(n), null, childOptions);\n    });\n  }\n\n  /**\n   * Returns the value of prop with the given name of the current node.\n   *\n   * @param propName\n   * @returns {*}\n   */\n  prop(propName) {\n    return this.props()[propName];\n  }\n\n  /**\n   * Used to invoke a function prop.\n   * Will invoke an function prop and return its value.\n   *\n   * @param {String} propName\n   * @returns {Any}\n   */\n  invoke(propName) {\n    return this.single('invoke', () => {\n      const handler = this.prop(propName);\n      if (typeof handler !== 'function') {\n        throw new TypeError('ShallowWrapper::invoke() requires the name of a prop whose value is a function');\n      }\n      return (...args) => {\n        const response = handler(...args);\n        this[ROOT].update();\n        return response;\n      };\n    });\n  }\n\n  /**\n   * Returns a wrapper of the node rendered by the provided render prop.\n   *\n   * @param {String} propName\n   * @returns {Function}\n   */\n  renderProp(propName) {\n    const adapter = getAdapter(this[OPTIONS]);\n    if (typeof adapter.wrap !== 'function') {\n      throw new RangeError('your adapter does not support `wrap`. Try upgrading it!');\n    }\n\n    return this.single('renderProp', (n) => {\n      if (n.nodeType === 'host') {\n        throw new TypeError('ShallowWrapper::renderProp() can only be called on custom components');\n      }\n      if (typeof propName !== 'string') {\n        throw new TypeError('ShallowWrapper::renderProp(): `propName` must be a string');\n      }\n      const props = this.props();\n      if (!hasOwn(props, propName)) {\n        throw new Error(`ShallowWrapper::renderProp(): no prop called “${propName}“ found`);\n      }\n      const propValue = props[propName];\n      if (typeof propValue !== 'function') {\n        throw new TypeError(`ShallowWrapper::renderProp(): expected prop “${propName}“ to contain a function, but it holds “${typeof propValue}“`);\n      }\n\n      return (...args) => {\n        const element = propValue(...args);\n        const wrapped = adapter.wrap(element);\n        return this.wrap(wrapped, null, this[OPTIONS]);\n      };\n    });\n  }\n\n  /**\n   * Returns the key assigned to the current node.\n   *\n   * @returns {String}\n   */\n  key() {\n    return this.single('key', (n) => (n.key === undefined ? null : n.key));\n  }\n\n  /**\n   * Returns the type of the current node of this wrapper. If it's a composite component, this will\n   * be the component constructor. If it's a native DOM node, it will be a string of the tag name.\n   * If it's null, it will be null.\n   *\n   * @returns {String|Function|null}\n   */\n  type() {\n    return this.single('type', (n) => typeOfNode(n));\n  }\n\n  /**\n   * Returns the name of the current node of this wrapper.\n   *\n   * In order of precedence => type.displayName -> type.name -> type.\n   *\n   * @returns {String}\n   */\n  name() {\n    const adapter = getAdapter(this[OPTIONS]);\n    return this.single('name', (n) => (\n      adapter.displayNameOfNode ? adapter.displayNameOfNode(n) : displayNameOfNode(n)\n    ));\n  }\n\n  /**\n   * Returns whether or not the current node has the given class name or not.\n   *\n   * NOTE: can only be called on a wrapper of a single node.\n   *\n   * @param className\n   * @returns {Boolean}\n   */\n  hasClass(className) {\n    if (typeof className === 'string' && className.indexOf('.') !== -1) {\n      // eslint-disable-next-line no-console\n      console.warn('It looks like you\\'re calling `ShallowWrapper::hasClass()` with a CSS selector. hasClass() expects a class name, not a CSS selector.');\n    }\n    return this.single('hasClass', (n) => hasClassName(n, className));\n  }\n\n  /**\n   * Iterates through each node of the current wrapper and executes the provided function with a\n   * wrapper around the corresponding node passed in as the first argument.\n   *\n   * @param {Function} fn\n   * @returns {ShallowWrapper}\n   */\n  forEach(fn) {\n    this.getNodesInternal().forEach((n, i) => fn.call(this, this.wrap(n), i));\n    return this;\n  }\n\n  /**\n   * Maps the current array of nodes to another array. Each node is passed in as a `ShallowWrapper`\n   * to the map function.\n   *\n   * @param {Function} fn\n   * @returns {Array}\n   */\n  map(fn) {\n    return this.getNodesInternal().map((n, i) => fn.call(this, this.wrap(n), i));\n  }\n\n  /**\n   * Reduces the current array of nodes to a value. Each node is passed in as a `ShallowWrapper`\n   * to the reducer function.\n   *\n   * @param {Function} fn - the reducer function\n   * @param {*} initialValue - the initial value\n   * @returns {*}\n   */\n  reduce(fn, initialValue = undefined) {\n    if (arguments.length > 1) {\n      return this.getNodesInternal().reduce(\n        (accum, n, i) => fn.call(this, accum, this.wrap(n), i),\n        initialValue,\n      );\n    }\n    return this.getNodesInternal().reduce((accum, n, i) => fn.call(\n      this,\n      i === 1 ? this.wrap(accum) : accum,\n      this.wrap(n),\n      i,\n    ));\n  }\n\n  /**\n   * Reduces the current array of nodes to another array, from right to left. Each node is passed\n   * in as a `ShallowWrapper` to the reducer function.\n   *\n   * @param {Function} fn - the reducer function\n   * @param {*} initialValue - the initial value\n   * @returns {*}\n   */\n  reduceRight(fn, initialValue = undefined) {\n    if (arguments.length > 1) {\n      return this.getNodesInternal().reduceRight(\n        (accum, n, i) => fn.call(this, accum, this.wrap(n), i),\n        initialValue,\n      );\n    }\n    return this.getNodesInternal().reduceRight((accum, n, i) => fn.call(\n      this,\n      i === 1 ? this.wrap(accum) : accum,\n      this.wrap(n),\n      i,\n    ));\n  }\n\n  /**\n   * Returns a new wrapper with a subset of the nodes of the original wrapper, according to the\n   * rules of `Array#slice`.\n   *\n   * @param {Number} begin\n   * @param {Number} end\n   * @returns {ShallowWrapper}\n   */\n  slice(begin, end) {\n    return this.wrap(this.getNodesInternal().slice(begin, end));\n  }\n\n  /**\n   * Returns whether or not any of the nodes in the wrapper match the provided selector.\n   *\n   * @param {EnzymeSelector} selector\n   * @returns {Boolean}\n   */\n  some(selector) {\n    if (this[ROOT] === this) {\n      throw new Error('ShallowWrapper::some() can not be called on the root');\n    }\n    const predicate = buildPredicate(selector);\n    return this.getNodesInternal().some(predicate);\n  }\n\n  /**\n   * Returns whether or not any of the nodes in the wrapper pass the provided predicate function.\n   *\n   * @param {Function} predicate\n   * @returns {Boolean}\n   */\n  someWhere(predicate) {\n    return this.getNodesInternal().some((n, i) => predicate.call(this, this.wrap(n), i));\n  }\n\n  /**\n   * Returns whether or not all of the nodes in the wrapper match the provided selector.\n   *\n   * @param {EnzymeSelector} selector\n   * @returns {Boolean}\n   */\n  every(selector) {\n    const predicate = buildPredicate(selector);\n    return this.getNodesInternal().every(predicate);\n  }\n\n  /**\n   * Returns whether or not any of the nodes in the wrapper pass the provided predicate function.\n   *\n   * @param {Function} predicate\n   * @returns {Boolean}\n   */\n  everyWhere(predicate) {\n    return this.getNodesInternal().every((n, i) => predicate.call(this, this.wrap(n), i));\n  }\n\n  /**\n   * Utility method used to create new wrappers with a mapping function that returns an array of\n   * nodes in response to a single node wrapper. The returned wrapper is a single wrapper around\n   * all of the mapped nodes flattened (and de-duplicated).\n   *\n   * @param {Function} fn\n   * @returns {ShallowWrapper}\n   */\n  flatMap(fn) {\n    const nodes = this.getNodesInternal().map((n, i) => fn.call(this, this.wrap(n), i));\n    const flattened = flat(nodes, 1);\n    return this.wrap(flattened.filter(Boolean));\n  }\n\n  /**\n   * Finds all nodes in the current wrapper nodes' render trees that match the provided predicate\n   * function. The predicate function will receive the nodes inside a ShallowWrapper as its\n   * first argument.\n   *\n   * @param {Function} predicate\n   * @returns {ShallowWrapper}\n   */\n  findWhere(predicate) {\n    return findWhereUnwrapped(this, (n) => {\n      const node = this.wrap(n);\n      return node.length > 0 && predicate(node);\n    });\n  }\n\n  /**\n   * Returns the node at a given index of the current wrapper.\n   *\n   * @param index\n   * @returns {ReactElement}\n   */\n  get(index) {\n    return this.getElements()[index];\n  }\n\n  /**\n   * Returns a wrapper around the node at a given index of the current wrapper.\n   *\n   * @param index\n   * @returns {ShallowWrapper}\n   */\n  at(index) {\n    const nodes = this.getNodesInternal();\n    if (index < nodes.length) {\n      return this.wrap(nodes[index]);\n    }\n    return this.wrap([]);\n  }\n\n  /**\n   * Returns a wrapper around the first node of the current wrapper.\n   *\n   * @returns {ShallowWrapper}\n   */\n  first() {\n    return this.at(0);\n  }\n\n  /**\n   * Returns a wrapper around the last node of the current wrapper.\n   *\n   * @returns {ShallowWrapper}\n   */\n  last() {\n    return this.at(this.length - 1);\n  }\n\n  /**\n   * Delegates to exists()\n   *\n   * @returns {boolean}\n   */\n  isEmpty() {\n    // eslint-disable-next-line no-console\n    console.warn('Enzyme::Deprecated method isEmpty() called, use exists() instead.');\n    return !this.exists();\n  }\n\n  /**\n   * Returns true if the current wrapper has nodes. False otherwise.\n   * If called with a selector it returns `.find(selector).exists()` instead.\n   *\n   * @param {EnzymeSelector} selector (optional)\n   * @returns {boolean}\n   */\n  exists(selector = null) {\n    return arguments.length > 0 ? this.find(selector).exists() : this.length > 0;\n  }\n\n  /**\n   * Utility method that throws an error if the current instance has a length other than one.\n   * This is primarily used to enforce that certain methods are only run on a wrapper when it is\n   * wrapping a single node.\n   *\n   * @param fn\n   * @returns {*}\n   */\n  single(name, fn) {\n    const fnName = typeof name === 'string' ? name : 'unknown';\n    const callback = typeof fn === 'function' ? fn : name;\n    if (this.length !== 1) {\n      throw new Error(`Method “${fnName}” is meant to be run on 1 node. ${this.length} found instead.`);\n    }\n    return callback.call(this, this.getNodeInternal());\n  }\n\n  /**\n   * Helpful utility method to create a new wrapper with the same root as the current wrapper, with\n   * any nodes passed in as the first parameter automatically wrapped.\n   *\n   * @param node\n   * @returns {ShallowWrapper}\n   */\n  wrap(node, root = this[ROOT], ...args) {\n    if (node instanceof ShallowWrapper) {\n      return node;\n    }\n    return new ShallowWrapper(node, root, ...args);\n  }\n\n  /**\n   * Returns an HTML-like string of the shallow render for debugging purposes.\n   *\n   * @param {Object} [options] - Property bag of additional options.\n   * @param {boolean} [options.ignoreProps] - if true, props are omitted from the string.\n   * @param {boolean} [options.verbose] - if true, arrays and objects to be verbosely printed.\n   * @returns {String}\n   */\n  debug(options = {}) {\n    return debugNodes(this.getNodesInternal(), options);\n  }\n\n  /**\n   * Invokes intercepter and returns itself. intercepter is called with itself.\n   * This is helpful when debugging nodes in method chains.\n   * @param fn\n   * @returns {ShallowWrapper}\n   */\n  tap(intercepter) {\n    intercepter(this);\n    return this;\n  }\n\n  /**\n   * Primarily useful for HOCs (higher-order components), this method may only be\n   * run on a single, non-DOM node, and will return the node, shallow-rendered.\n   *\n   * @param {Object} options\n   * @returns {ShallowWrapper}\n   */\n  dive(options = {}) {\n    const adapter = getAdapter(this[OPTIONS]);\n    const name = 'dive';\n    return this.single(name, (n) => {\n      if (n && n.nodeType === 'host') {\n        throw new TypeError(`ShallowWrapper::${name}() can not be called on Host Components`);\n      }\n      const el = getAdapter(this[OPTIONS]).nodeToElement(n);\n      if (!isCustomComponentElement(el, adapter)) {\n        throw new TypeError(`ShallowWrapper::${name}() can only be called on components`);\n      }\n      const childOptions = makeInheritedChildOptions(this, options);\n      return this.wrap(el, null, childOptions);\n    });\n  }\n\n  /**\n   * Strips out all the not host-nodes from the list of nodes\n   *\n   * This method is useful if you want to check for the presence of host nodes\n   * (actually rendered HTML elements) ignoring the React nodes.\n   */\n  hostNodes() {\n    return this.filterWhere((n) => typeof n.type() === 'string');\n  }\n}\n\n/**\n * Updates the context of the primary wrapper when the\n * `wrappingComponent` re-renders.\n */\nfunction updatePrimaryRootContext(wrappingComponent) {\n  const adapter = getAdapter(wrappingComponent[OPTIONS]);\n  const primaryWrapper = wrappingComponent[PRIMARY_WRAPPER];\n  const primaryRenderer = primaryWrapper[RENDERER];\n  const primaryNode = primaryRenderer.getNode();\n  const {\n    legacyContext,\n    providerValues,\n  } = getContextFromWrappingComponent(wrappingComponent, adapter);\n  const prevProviderValues = primaryWrapper[PROVIDER_VALUES];\n\n  primaryWrapper.setContext({\n    ...wrappingComponent[PRIMARY_WRAPPER][OPTIONS].context,\n    ...legacyContext,\n  });\n  primaryWrapper[PROVIDER_VALUES] = new Map([...prevProviderValues, ...providerValues]);\n\n  if (typeof adapter.isContextConsumer === 'function' && adapter.isContextConsumer(primaryNode.type)) {\n    const Consumer = primaryNode.type;\n    // Adapters with an `isContextConsumer` method will definitely have a `getProviderFromConsumer`\n    // method.\n    const Provider = adapter.getProviderFromConsumer(Consumer);\n    const newValue = providerValues.get(Provider);\n    const oldValue = prevProviderValues.get(Provider);\n\n    // Use referential comparison like React\n    if (newValue !== oldValue) {\n      primaryWrapper.rerender();\n    }\n  }\n}\n\n/**\n * A *special* \"root\" wrapper that represents the component passed as `wrappingComponent`.\n * It is linked to the primary root such that updates to it will update the primary.\n *\n * @class WrappingComponentWrapper\n */\nclass WrappingComponentWrapper extends ShallowWrapper {\n  constructor(nodes, root, RootFinder) {\n    super(nodes);\n    privateSet(this, PRIMARY_WRAPPER, root);\n    privateSet(this, ROOT_FINDER, RootFinder);\n  }\n\n  /**\n   * Like rerender() on ShallowWrapper, except it also does a \"full render\" of\n   * itself and updates the primary ShallowWrapper's context.\n   */\n  rerender(...args) {\n    const result = super.rerender(...args);\n    updatePrimaryRootContext(this);\n    return result;\n  }\n\n  /**\n   * Like setState() on ShallowWrapper, except it also does a \"full render\" of\n   * itself and updates the primary ShallowWrapper's context.\n   */\n  setState(...args) {\n    const result = super.setState(...args);\n    updatePrimaryRootContext(this);\n    return result;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  getWrappingComponent() {\n    throw new Error('ShallowWrapper::getWrappingComponent() can only be called on the root');\n  }\n}\n\nif (ITERATOR_SYMBOL) {\n  Object.defineProperty(ShallowWrapper.prototype, ITERATOR_SYMBOL, {\n    configurable: true,\n    value: function iterator() {\n      const iter = this.getNodesInternal()[ITERATOR_SYMBOL]();\n      const adapter = getAdapter(this[OPTIONS]);\n      return {\n        [ITERATOR_SYMBOL]() { return this; },\n        next() {\n          const next = iter.next();\n          if (next.done) {\n            return { done: true };\n          }\n          return {\n            done: false,\n            value: adapter.nodeToElement(next.value),\n          };\n        },\n      };\n    },\n  });\n}\n\nfunction privateWarning(prop, extraMessage) {\n  Object.defineProperty(ShallowWrapper.prototype, prop, {\n    get() {\n      throw new Error(trim(`\n        Attempted to access ShallowWrapper::${prop}, which was previously a private property on\n        Enzyme ShallowWrapper instances, but is no longer and should not be relied upon.\n        ${extraMessage}\n      `));\n    },\n    enumerable: false,\n    configurable: false,\n  });\n}\n\nprivateWarning('node', 'Consider using the getElement() method instead.');\nprivateWarning('nodes', 'Consider using the getElements() method instead.');\nprivateWarning('renderer', '');\nprivateWarning('options', '');\nprivateWarning('complexSelector', '');\n\nexport default ShallowWrapper;\n"],"mappings":"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","ignoreList":[]}