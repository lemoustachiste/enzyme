{"version":3,"file":"EnzymeAdapter.js","names":["unimplementedError","methodName","classname","Error","concat","EnzymeAdapter","_classCallCheck","options","_createClass","key","value","createRenderer","nodeToElement","node","matchesElementType","matchingType","type","isValidElement","element","createElement","props","invokeSetStateCallback","instance","callback","call","MODES","STRING","MOUNT","SHALLOW","_default","exports","module","default"],"sources":["../src/EnzymeAdapter.js"],"sourcesContent":["function unimplementedError(methodName, classname) {\n  return new Error(`${methodName} is a required method of ${classname}, but was not implemented.`);\n}\n\nclass EnzymeAdapter {\n  constructor() {\n    this.options = {};\n  }\n\n  // Provided a bag of options, return an `EnzymeRenderer`. Some options can be implementation\n  // specific, like `attach` etc. for React, but not part of this interface explicitly.\n  // eslint-disable-next-line class-methods-use-this, no-unused-vars\n  createRenderer(options) {\n    throw unimplementedError('createRenderer', 'EnzymeAdapter');\n  }\n\n  // converts an RSTNode to the corresponding JSX Pragma Element. This will be needed\n  // in order to implement the `Wrapper.mount()` and `Wrapper.shallow()` methods, but should\n  // be pretty straightforward for people to implement.\n  // eslint-disable-next-line class-methods-use-this, no-unused-vars\n  nodeToElement(node) {\n    throw unimplementedError('nodeToElement', 'EnzymeAdapter');\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  matchesElementType(node, matchingType) {\n    if (!node) {\n      return node;\n    }\n    const { type } = node;\n    return type === matchingType;\n  }\n\n  // eslint-disable-next-line class-methods-use-this, no-unused-vars\n  isValidElement(element) {\n    throw unimplementedError('isValidElement', 'EnzymeAdapter');\n  }\n\n  // eslint-disable-next-line class-methods-use-this, no-unused-vars\n  createElement(type, props, ...children) {\n    throw unimplementedError('createElement', 'EnzymeAdapter');\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  invokeSetStateCallback(instance, callback) {\n    callback.call(instance);\n  }\n}\n\nEnzymeAdapter.MODES = {\n  STRING: 'string',\n  MOUNT: 'mount',\n  SHALLOW: 'shallow',\n};\n\nexport default EnzymeAdapter;\n"],"mappings":";;;;;;;;;;;;AAAA,SAASA,kBAAkBA,CAACC,UAAU,EAAEC,SAAS,EAAE;EACjD,OAAO,IAAIC,KAAK,IAAAC,MAAA,CAAIH,UAAU,+BAAAG,MAAA,CAA4BF,SAAS,+BAA4B,CAAC;AAClG;AAAC,IAEKG,aAAa;EACjB,SAAAA,cAAA,EAAc;IAAAC,eAAA,OAAAD,aAAA;IACZ,IAAI,CAACE,OAAO,GAAG,CAAC,CAAC;EACnB;;EAEA;EACA;EACA;EAAA,OAAAC,YAAA,CAAAH,aAAA;IAAAI,GAAA;IAAAC,KAAA,EACA,SAAAC,cAAcA,CAACJ,OAAO,EAAE;MACtB,MAAMP,kBAAkB,CAAC,gBAAgB,EAAE,eAAe,CAAC;IAC7D;;IAEA;IACA;IACA;IACA;EAAA;IAAAS,GAAA;IAAAC,KAAA,EACA,SAAAE,aAAaA,CAACC,IAAI,EAAE;MAClB,MAAMb,kBAAkB,CAAC,eAAe,EAAE,eAAe,CAAC;IAC5D;;IAEA;EAAA;IAAAS,GAAA;IAAAC,KAAA,EACA,SAAAI,kBAAkBA,CAACD,IAAI,EAAEE,YAAY,EAAE;MACrC,IAAI,CAACF,IAAI,EAAE;QACT,OAAOA,IAAI;MACb;MACA,IAAQG,IAAI,GAAKH,IAAI,CAAbG,IAAI;MACZ,OAAOA,IAAI,KAAKD,YAAY;IAC9B;;IAEA;EAAA;IAAAN,GAAA;IAAAC,KAAA,EACA,SAAAO,cAAcA,CAACC,OAAO,EAAE;MACtB,MAAMlB,kBAAkB,CAAC,gBAAgB,EAAE,eAAe,CAAC;IAC7D;;IAEA;EAAA;IAAAS,GAAA;IAAAC,KAAA,EACA,SAAAS,aAAaA,CAACH,IAAI,EAAEI,KAAK,EAAe;MACtC,MAAMpB,kBAAkB,CAAC,eAAe,EAAE,eAAe,CAAC;IAC5D;;IAEA;EAAA;IAAAS,GAAA;IAAAC,KAAA,EACA,SAAAW,sBAAsBA,CAACC,QAAQ,EAAEC,QAAQ,EAAE;MACzCA,QAAQ,CAACC,IAAI,CAACF,QAAQ,CAAC;IACzB;EAAC;AAAA;AAGHjB,aAAa,CAACoB,KAAK,GAAG;EACpBC,MAAM,EAAE,QAAQ;EAChBC,KAAK,EAAE,OAAO;EACdC,OAAO,EAAE;AACX,CAAC;AAAC,IAAAC,QAAA,GAAAC,OAAA,cAEazB,aAAa;AAAA0B,MAAA,CAAAD,OAAA,GAAAA,OAAA,CAAAE,OAAA","ignoreList":[]}