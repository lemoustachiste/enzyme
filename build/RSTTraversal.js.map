{"version":3,"file":"RSTTraversal.js","names":["_arrayPrototype","_interopRequireDefault","require","_object","_object2","_isSubset","_functionPrototype","_isRegex","_getAdapter","e","__esModule","_slicedToArray","r","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","l","t","Symbol","iterator","n","i","u","a","f","o","call","next","Object","done","push","value","length","Array","isArray","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","_arrayLikeToArray","toString","slice","constructor","name","from","test","propsOfNode","node","props","childrenOfNode","adapter","getAdapter","adapterHasIsFragment","isFragment","renderedArray","rendered","flat","map","currentChild","hasClassName","className","classes","String","replace","isRegex","concat","indexOf","treeForEach","tree","fn","forEach","treeFilter","results","findParentNode","root","targetNode","pathFilter","path","filter","pathToNode","queue","hasNode","testNode","current","pop","children","apply","parentsOfNode","reverse","nodeHasId","id","CAN_NEVER_MATCH","replaceUndefined","v","replaceUndefinedValues","obj","newEntries","entries","_ref","_ref2","k","fromEntries","nodeMatchesObjectProps","isSubset","getTextFromHostNode","hostNode","textContent","getTextFromRSTNode","_ref3","getCustom","handleHostNodes","recurse","_ref3$nullRenderRetur","nullRenderReturnsNull","type","nodeType","join","getTextFromNode","_ref4","displayName","functionName","getTextFromHostNodes","item","nodes","nodeToHostNode","getHTMLFromHostNode","outerHTML","getHTMLFromHostNodes"],"sources":["../src/RSTTraversal.js"],"sourcesContent":["import flat from 'array.prototype.flat';\nimport entries from 'object.entries';\nimport fromEntries from 'object.fromentries';\nimport isSubset from 'is-subset';\nimport functionName from 'function.prototype.name';\nimport isRegex from 'is-regex';\nimport getAdapter from './getAdapter';\n\nexport function propsOfNode(node) {\n  return (node && node.props) || {};\n}\n\nexport function childrenOfNode(node) {\n  if (!node) return [];\n\n  const adapter = getAdapter();\n  const adapterHasIsFragment = adapter.isFragment && typeof adapter.isFragment === 'function';\n\n  const renderedArray = Array.isArray(node.rendered) ? flat(node.rendered, 1) : [node.rendered];\n\n  // React adapters before 16 will not have isFragment\n  if (!adapterHasIsFragment) {\n    return renderedArray;\n  }\n\n  return flat(renderedArray.map((currentChild) => {\n    // If the node is a Fragment, we want to return its children, not the fragment itself\n    if (adapter.isFragment(currentChild)) {\n      return childrenOfNode(currentChild);\n    }\n\n    return currentChild;\n  }), 1);\n}\n\nexport function hasClassName(node, className) {\n  let classes = propsOfNode(node).className || '';\n  classes = String(classes).replace(/\\s/g, ' ');\n  if (isRegex(className)) return className.test(classes);\n  return ` ${classes} `.indexOf(` ${className} `) > -1;\n}\n\nexport function treeForEach(tree, fn) {\n  if (tree) {\n    fn(tree);\n  }\n  childrenOfNode(tree).forEach((node) => treeForEach(node, fn));\n}\n\nexport function treeFilter(tree, fn) {\n  const results = [];\n  treeForEach(tree, (node) => {\n    if (fn(node)) {\n      results.push(node);\n    }\n  });\n  return results;\n}\n\n/**\n * To support sibling selectors we need to be able to find\n * the siblings of a node. The easiest way to do that is find\n * the parent of the node and access its children.\n *\n * This would be unneeded if the RST spec included sibling pointers\n * such as node.nextSibling and node.prevSibling\n * @param {*} root\n * @param {*} targetNode\n */\nexport function findParentNode(root, targetNode) {\n  const results = treeFilter(\n    root,\n    (node) => {\n      if (!node.rendered) {\n        return false;\n      }\n\n      return childrenOfNode(node).indexOf(targetNode) !== -1;\n    },\n  );\n  return results[0] || null;\n}\n\nfunction pathFilter(path, fn) {\n  return path.filter((tree) => treeFilter(tree, fn).length !== 0);\n}\n\nexport function pathToNode(node, root) {\n  const queue = [root];\n  const path = [];\n\n  const hasNode = (testNode) => node === testNode;\n\n  while (queue.length) {\n    const current = queue.pop();\n    const children = childrenOfNode(current);\n    if (current === node) return pathFilter(path, hasNode);\n\n    path.push(current);\n\n    if (children.length === 0) {\n      // leaf node. if it isn't the node we are looking for, we pop.\n      path.pop();\n    }\n    queue.push(...children);\n  }\n\n  return null;\n}\n\nexport function parentsOfNode(node, root) {\n  return (pathToNode(node, root) || []).reverse();\n}\n\nexport function nodeHasId(node, id) {\n  return propsOfNode(node).id === id;\n}\n\nconst CAN_NEVER_MATCH = {};\nfunction replaceUndefined(v) {\n  return typeof v !== 'undefined' ? v : CAN_NEVER_MATCH;\n}\nfunction replaceUndefinedValues(obj) {\n  const newEntries = entries(obj).map(([k, v]) => [k, replaceUndefined(v)]);\n  return fromEntries(newEntries);\n}\n\nexport function nodeMatchesObjectProps(node, props) {\n  return isSubset(propsOfNode(node), replaceUndefinedValues(props));\n}\n\nfunction getTextFromHostNode(hostNode) {\n  if (typeof hostNode === 'string') {\n    return String(hostNode || '');\n  }\n  if (!hostNode) {\n    return '';\n  }\n  return hostNode.textContent || '';\n}\n\nfunction getTextFromRSTNode(node, {\n  getCustom,\n  handleHostNodes,\n  recurse,\n  nullRenderReturnsNull = false,\n}) {\n  if (node == null) {\n    return '';\n  }\n\n  if (typeof node === 'string' || typeof node === 'number') {\n    return String(node);\n  }\n\n  if (getCustom && node.type && typeof node.type === 'function') {\n    return getCustom(node);\n  }\n\n  if (handleHostNodes && node.nodeType === 'host') {\n    return handleHostNodes(node);\n  }\n  if (node.rendered == null && nullRenderReturnsNull) {\n    return null;\n  }\n  return childrenOfNode(node).map(recurse).join('');\n}\n\nexport function getTextFromNode(node) {\n  return getTextFromRSTNode(node, {\n    recurse: getTextFromNode,\n    getCustom({ type }) {\n      return `<${type.displayName || functionName(type)} />`;\n    },\n  });\n}\n\nexport function getTextFromHostNodes(node, adapter) {\n  return getTextFromRSTNode(node, {\n    recurse(item) {\n      return getTextFromHostNodes(item, adapter);\n    },\n    handleHostNodes(item) {\n      const nodes = [].concat(adapter.nodeToHostNode(item, true));\n      return nodes.map(getTextFromHostNode).join('');\n    },\n  });\n}\n\nfunction getHTMLFromHostNode(hostNode) {\n  if (hostNode == null) {\n    return null;\n  }\n  return hostNode.outerHTML.replace(/\\sdata-(reactid|reactroot)+=\"([^\"]*)+\"/g, '');\n}\n\nexport function getHTMLFromHostNodes(node, adapter) {\n  return getTextFromRSTNode(node, {\n    recurse(item) {\n      return getHTMLFromHostNodes(item, adapter);\n    },\n    handleHostNodes(item) {\n      const nodes = [].concat(adapter.nodeToHostNode(item, true));\n      return nodes.map(getHTMLFromHostNode).join('');\n    },\n    nullRenderReturnsNull: true,\n  });\n}\n"],"mappings":"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","ignoreList":[]}